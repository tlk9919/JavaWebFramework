<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lession13springbootmybatis.dao.StudentMapper">

    <resultMap id="studentResultMap" type="com.example.lession13springbootmybatis.dao.StudentMapper">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <id property="snum" column="snum" jdbcType="INTEGER"/>
        <id property="sname" column="sname" jdbcType="VARCHAR"/>
    </resultMap>
<!--resultMap 是 MyBatis 用来指定查询结果如何映射到 Java 对象的结构。这里 studentResultMap 作为 id，它映射查询结果到 StudentMapper 类型。/-->
    <insert id="saveStudent" parameterType="com.example.lession13springbootmybatis.model.Student">
        insert into Student (snum, sname) values (#{snum}, #{sname});
    </insert>

    <select id="getStudentByID" parameterType="int" resultMap="studentResultMap">
        select id,snum,sname from student where id = #{id}
    </select>

    <select id="getStudentByName" parameterType="String" resultMap="studentResultMap">
        select id,snum,sname from student where sname LIKE CONCAT('%', #{name}, '%')
    </select>

    <select id="getAllStudent" resultMap="studentResultMap">
        select * from student;
    </select>

    <update id="updateStudentById" parameterType="com.example.lession13springbootmybatis.model.Student">
        update Student set  snum=#{snum}, sname=#{sname}  where id=#{id};
    </update>

    <delete id="deleteStudentById" parameterType="int">
        delete from Student where id=#{id};
    </delete>

</mapper>